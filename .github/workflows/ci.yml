---
name: CI
on:
  pull_request:
  push:
    branches:
      - master
env:
  PY_COLORS: '1'
  ANSIBLE_FORCE_COLOR: '1'
  HOST_KEY_CHECKING: false
  PATH: "$HOME/bin:$HOME/.local/bin:$PATH"

jobs:
  test_run:
    name: Ansible
    runs-on: [ "vm-ssd" ]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pip prequities
        run: pip3 install --no-cache-dir --user --upgrade -r files/requirements/pip3.txt
        continue-on-error: true
 
      - name: Install ansible prequities
        run: pip3 install --no-cache-dir --user --upgrade -r files/requirements/ansible-galaxy.yml
        continue-on-error: true
 
      - name: Code lint
        run: pre-commit run --show-diff-on-failure --color=always --all-files
        id: lint
        
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          LINT: "ansible-lint\n${{ steps.lint.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Ansible Lint outcome ������\`${{ steps.plant.outcome }}\`

            <details><summary>Show Lint</summary>

            \`\`\`\n
            ${process.env.LINT}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}
\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
      - name: Run ansible
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: ansible-playbook -i inventory main.yml